#!/bin/bash
black=`tput setaf 0`
red=`tput setaf 1`
green=`tput setaf 2`
reset=`tput sgr0`
inv=`tput setab 1`


usage() {
  echo "usage: git purge"
  echo "Removes all local branches fully merged in `git config branches.main`"
  echo "NOTE: branches.main is custom git config you will need to add."
  echo "This command does not work without it!"
  exit 0;
}
case $1 in
  -h) usage;;
  h) usage;;
  help) usage;;
esac

main=`git config branches.main`
if [ -z $main ]; then
  echo "Define 'branches.main':"
  echo "* globally ~/.gitconfig: git config --global branches.main <branch>"
  echo "* locally ./git/config: git config branches.main <branch>"
  echo
  echo "For example: git config branches.main master"
  echo
fi
keep=`git config branches.keep`
if [ -z $keep ]; then
  echo "Define 'branches.keep':"
  echo "* globally ~/.gitconfig: git config --global branches.keep <branch>"
  echo "* locally ./git/config: git config branches.keep <branch>"
  echo
  echo "For example: git config branches.keep (integration\d|production|master)$"
  echo
fi

[ -z $main ] && exit 1
[ -z $keep ] && exit 1

echo "Fetching merged branches..."
git remote prune origin
remote_branches=$(git branch --remotes --merged $main | ag --invert-match $keep)
local_branches=$(git branch --merged $main | ag --invert-match $keep)

if [ -z "$remote_branches" ] && [ -z "$local_branches" ]; then
  echo "${red}No existing branches have been merged into${reset} ${black}${inv}$main${reset}."

else
  echo "${red}This will remove the following *remote* branches:${reset}"
  echo "$remote_branches"
  echo "${red}This will remove the following *local* branches:${reset}"
  echo "$local_branches"

  read -p "Continue? Yes/No: " -n 1 choice
  echo

  if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
    # Remove remote branches
    git push origin `echo $remote_branches | sed 's/origin\//:/g' | tr -d '\n'`
    # Remove local branches
    git branch -d `git branch --merged $main | ag --invert-match $keep | sed 's/origin\///g' | tr -d '\n'`
    exit 0
  fi
  echo "${red}No branches removed.${reset}"
  exit 1
fi
