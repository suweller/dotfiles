[core]
  excludesfile = ~/.gitignore
  attributesfile = ~/.gitattributes
  pager = diff-so-fancy \
    | less \
      --no-init \
      --quit-if-one-screen \
      --raw-control-chars \
      --tabs=4

[user]
  name = Steven Weller
  email = github@suweller.com

[github]
  user = suweller

[alias]
  aliases = !git config --global --get-regexp ^alias | sed -e 's/^alias./  /'
  cloc = !cloc $(git ls-files)
  c = commit --verbose
  co = checkout
  s = status --short --branch
  d = diff
  a = add --patch
  b = branch
  ba = for-each-ref \
    --sort=authordate refs/remotes \
    --format='\
%(color:red)%(objectname:short) \
%(align:15,left)%(color:green)%(authordate:relative)%(end) \
%(align:20,left)%(color:blue)%(authorname)%(end) \
%(color:reset)%(refname:strip=3)'
  today = log \
    --stat \
    --since='1 Day Ago' \
    --pretty=oneline \
    --abbrev-commit \
    --date=relative
  l = log \
    --decorate=short \
    --format='\
%C(red)%h %C(reset)\
%C(green)%<(6,trunc)%cr %C(reset)\
%<(72,trunc)%s \
%C(auto)%D%C(reset)'
  la = log \
    --decorate=short \
    --format='\
%C(red)%h %C(reset)\
%C(green)%<(6,trunc)%cr %C(reset)\
%C(blue)%<(8,trunc)%an %C(reset)\
%<(72,trunc)%s \
%C(auto)%D%C(reset)'
  revolt = !sh -c 'open https://github.com/publitas/revolution/compare/master...$(git symbolic-ref --short HEAD)'
  ll = "!git l --numstat $@"
  ; graphviz = "!f() { echo 'digraph git {'; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f]+/\"&\"/g'; echo '}';}; f"
  ctags = !.git/hooks/ctags
  ctags-bundle = !.git/hooks/ctags-bundle
  ed = !$EDITOR -p `git diff --name-only $@ | uniq`
  who = shortlog --numbered --summary --
  find-merge = "!sh -c ' \
    commit=$0 \
    && branch=${1:-HEAD} \
    && ( \
      git rev-list $commit..$branch --ancestry-path \
      | cat -n; git rev-list $commit..$branch --first-parent \
      | cat -n \
    ) \
    | sort -k2 \
    | uniq -f1 -d \
    | sort -n \
    | tail -1 \
    | cut -f2 \
    '"
  show-merge = "!sh -c ' \
    merge=$(git find-merge $0 $1) \
    && [ -n \"$merge\" ] \
    && git show $merge \
    '"
  sup = "!sh -c 'for branch in $(git branch --no-merged); do \
    git l $branch ^$(git symbolic-ref HEAD); \
    echo ''; \
    done '"
  x = !sh -c 'git $@ HEAD ^$(git merge-base --fork-point $0)'
  nuke = !git branch -D $1 && git push origin :$1
  rubocop = !sh -c 'bin/rubocop-git $(git merge-base --fork-point master) HEAD'

[commit]
  gpgsign = true

[push]
  default = current

[init]
  templatedir = ~/.git_template

[merge]
  tool = vimdiff

[diff]
  # For Github-style word diffs
  wordRegex = [^[:space:]]

[color]
  ui = auto
  interactive = auto

[color "diff"]
  # Color syntax: <foreground> <background>
  # So "normal red" is normal foreground, red background
  # BUT bold is a modifier, so "bold green red" means
  #   "bold green" foreground, red background
  whitespace = red reverse
  plain = white
  meta = cyan
  frag = magenta bold
  old = red
  new = green
  commit = yellow

[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighlight = green bold 22

[pull]
  rebase = true

[filter "lfs"]
  clean = git lfs clean %f
  smudge = git lfs smudge %f
  required = true

[merge "railsschema"]
  name = newer Rails schema version
  driver = "ruby -e '\n\
    system %(git), %(merge-file), %(--marker-size=%L), %(%A), %(%O), %(%B)\n\
    b = File.read(%(%A))\n\
    b.sub!(/^<+ .*\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n=+\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n>+ .*/) do\n\
      %(ActiveRecord::Schema.define(:version => #{[$1, $2].max}) do)\n\
    end\n\
    File.open(%(%A), %(w)) {|f| f.write(b)}\n\
    exit 1 if b.include?(%(<)*%L)'"

[gpg]
  program = gpg2
