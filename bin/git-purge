#!/bin/bash
current_branch=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
if [ "$current_branch" != "master" ]; then
  echo "WARNING: You are on branch $current_branch, NOT master."
fi
echo "Fetching merged branches..."
git remote prune origin
remote_branches=$(git branch -r --merged | grep -v '/master$' | grep -v "/$current_branch$")
local_branches=$(git branch --merged | grep -v 'master$' | grep -v "$current_branch$")

if [ -z "$remote_branches" ] && [ -z "$local_branches" ]; then
  echo "No existing branches have been merged into $current_branch."

else
  echo "This will remove the following branches:"
  echo "$remote_branches"
  echo "$local_branches"

  read -p "Continue? Yes/No/Select (y/n/s): " -n 1 choice
  echo

  if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
    # Remove remote branches
    git push origin `echo $remote_branches | sed 's/origin\//:/g' | tr -d '\n'`
    # Remove local branches
    git branch -d `git branch --merged | grep -v 'master$' | grep -v "$current_branch$" | sed 's/origin\///g' | tr -d '\n'`
    exit 0

  elif [ "$choice" == 's' ] || [ "$choice" == 'S' ]; then

    for branch in `echo $local_branches | sed 's/origin\//:/g' | tr -d '\n'`; do
      echo "git push origin $branch"
      read -p "Continue? Yes/No/Select (y/n/s): " -n 1 choice
      echo
      if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
        git push origin $branch
      fi
    done

    for branch in `echo $remote_branches | sed 's/origin\//:/g' | tr -d '\n'`; do
      echo "git push origin $branch"
      read -p "Continue? Yes/No/Select (y/n/s): " -n 1 choice
      echo
      if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
        git push origin $branch
      fi
    done

    exit 0
  fi
  echo "No branches removed."
  exit 1
fi
