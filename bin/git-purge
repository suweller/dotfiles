#!/bin/bash
black=`tput setaf 0`
red=`tput setaf 1`
green=`tput setaf 2`
reset=`tput sgr0`
inv=`tput setab 1`

keep=`git config branches.keep`
main=`git config branches.main`

echo "Fetching merged branches..."
git remote prune origin
remote_branches=$(git branch --remotes --merged $main | ag --invert-match $keep)
local_branches=$(git branch --merged $main | ag --invert-match $keep)

if [ -z "$remote_branches" ] && [ -z "$local_branches" ]; then
  echo "${red}No existing branches have been merged into${reset} ${black}${inv}$main${reset}."

else
  echo "${red}This will remove the following *remote* branches:${reset}"
  echo "$remote_branches"
  echo "${red}This will remove the following *local* branches:${reset}"
  echo "$local_branches"

  read -p "Continue? Yes/No: " -n 1 choice
  echo

  if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
    # Remove remote branches
    git push origin `echo $remote_branches | sed 's/origin\//:/g' | tr -d '\n'`
    # Remove local branches
    git branch -d `git branch --merged $main | ag --invert-match $keep | sed 's/origin\///g' | tr -d '\n'`
    exit 0
  fi
  echo "${red}No branches removed.${reset}"
  exit 1
fi
